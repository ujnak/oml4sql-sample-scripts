SQL> @oml4sql-time-series-exponential-smoothing
SQL> -----------------------------------------------------------------------
SQL> --   Oracle Machine Learning for SQL (OML4SQL) 23ai
SQL> --
SQL> --   Time Series - Exponential Smoothing Algorithm - dmesmdemo.sql
SQL> --
SQL> --   Copyright (c) 2024 Oracle Corporation and/or its affilitiates.
SQL> --
SQL> --  The Universal Permissive License (UPL), Version 1.0
SQL> --
SQL> --  https://oss.oracle.com/licenses/upl/
SQL> -----------------------------------------------------------------------
SQL> SET ECHO ON
SQL> SET FEEDBACK 1
SQL> SET NUMWIDTH 10
SQL> SET LINESIZE 80
SQL> SET TRIMSPOOL ON
SQL> SET TAB OFF
SQL> SET PAGESIZE 100
SQL>
SQL> -----------------------------------------------------------------------
SQL> --                            SET UP THE DATA
SQL> -----------------------------------------------------------------------
SQL> -- Cleanup old model with the same name
SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('ESM_SH_SAMPLE');
  2  EXCEPTION WHEN OTHERS THEN NULL; END;
  3  /

PL/SQL procedure successfully completed.

SQL>
SQL> -- Create input time series
SQL> create or replace view esm_sh_data
  2         as select time_id, amount_sold
  3         from sh.sales;

View ESM_SH_DATA created.

SQL>
SQL> -- Build the ESM model
SQL> DECLARE
  2    v_setlst DBMS_DATA_MINING.SETTING_LIST;
  3    v_data_query VARCHAR2(32767);
  4  BEGIN
  5    -- Model Settings ---------------------------------------------------
  6    --
  7    -- Select ESM as the algorithm
  8    v_setlst('ALGO_NAME') := 'ALGO_EXPONENTIAL_SMOOTHING';
  9    -- Set accumulation interval to be quarter
 10    v_setlst('EXSM_INTERVAL') := 'EXSM_INTERVAL_QTR';
 11    -- Set prediction step to be 4 quarters (one year)
 12    v_setlst('EXSM_PREDICTION_STEP') := '4';
 13    -- Set ESM model to be Holt-Winters
 14    v_setlst('EXSM_MODEL') := 'EXSM_WINTERS';
 15    -- Set seasonal cycle to be 4 quarters
 16    v_setlst('EXSM_SEASONALITY') := '4';
 17
 18    v_data_query := q'|SELECT * FROM ESM_SH_DATA|';
 19
 20    DBMS_DATA_MINING.CREATE_MODEL2(
 21      model_name          => 'ESM_SH_SAMPLE',
 22      mining_function     => 'TIME_SERIES',
 23      data_query          => v_data_query,
 24      set_list            => v_setlst,
 25      case_id_column_name => 'TIME_ID',
 26      target_column_name  => 'AMOUNT_SOLD'
 27    );
 28  END;
 29  /

PL/SQL procedure successfully completed.

SQL>
SQL> -- output setting table
SQL> column setting_name format a30
SQL> column setting_value format a30
SQL> SELECT setting_name, setting_value
  2    FROM user_mining_model_settings
  3   WHERE model_name = upper('ESM_SH_SAMPLE')
  4  ORDER BY setting_name;

SETTING_NAME                   SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME                      ALGO_EXPONENTIAL_SMOOTHING
EXSM_ACCUMULATE                EXSM_ACCU_TOTAL
EXSM_BACKCAST_OUTPUT           EXSM_BACKCAST_OUTPUT_ENABLE
EXSM_CONFIDENCE_LEVEL          .95
EXSM_INITVL_OPTIMIZE           EXSM_INITVL_OPTIMIZE_ENABLE
EXSM_INTERVAL                  EXSM_INTERVAL_QTR
EXSM_MODEL                     EXSM_WINTERS
EXSM_NMSE                      3
EXSM_OPTIMIZATION_CRIT         EXSM_OPT_CRIT_LIK
EXSM_PREDICTION_STEP           4
EXSM_SEASONALITY               4
EXSM_SETMISSING                EXSM_MISS_AUTO
ODMS_BOXCOX                    ODMS_BOXCOX_DISABLE
ODMS_DETAILS                   ODMS_ENABLE
ODMS_MISSING_VALUE_TREATMENT   ODMS_MISSING_VALUE_AUTO
ODMS_SAMPLING                  ODMS_SAMPLING_DISABLE
PREP_AUTO                      ON

17 rows selected.

SQL>
SQL> -- get signature
SQL> column attribute_name format a40
SQL> column attribute_type format a20
SQL> SELECT attribute_name, attribute_type
  2  FROM   user_mining_model_attributes
  3    WHERE  model_name=upper('ESM_SH_SAMPLE')
  4    ORDER BY attribute_name;

ATTRIBUTE_NAME                           ATTRIBUTE_TYPE
---------------------------------------- --------------------
AMOUNT_SOLD                              NUMERICAL

1 row selected.

SQL>
SQL>
SQL> -- get global diagnostics
SQL> column name format a20
SQL> column numeric_value format a20
SQL> column string_value format a15
SQL> SELECT name,
  2  to_char(numeric_value, '99999.99EEEE') numeric_value,
  3  string_value FROM DM$VGESM_SH_SAMPLE
  4    ORDER BY name;

NAME                 NUMERIC_VALUE        STRING_VALUE
-------------------- -------------------- ---------------
-2 LOG-LIKELIHOOD     -2.27E+02
AIC                    4.73E+02
AICC                   5.03E+02
ALPHA                  7.47E-01
AMSE                   2.55E+11
BETA                   5.59E-02
BIC                    4.80E+02
CONVERGED                                 YES
GAMMA                  1.00E-04
INITIAL LEVEL          6.11E+06
INITIAL SEASON 1       9.98E-01
INITIAL SEASON 2       1.02E+00
INITIAL SEASON 3       9.38E-01
INITIAL SEASON 4       1.04E+00
INITIAL TREND          4.21E+04
MAE                    2.74E+05
MSE                    1.31E+11
NUM_ROWS               9.19E+05
SIGMA                  8.71E-02
STD                    8.71E-02

20 rows selected.

SQL>
SQL> -- get predictions
SQL> set heading on
SQL> SET LINES 100
SQL> SET PAGES 105
SQL> COLUMN CASE_ID FORMAT A30
SQL> COLUMN VALUE FORMAT 9999999
SQL> COLUMN PREDICTION FORMAT 99999999
SQL> COLUMN LOWER FORMAT 99999999
SQL> COLUMN UPPER FORMAT 99999999
SQL> select case_id, value, prediction, lower, upper
  2  from DM$VPESM_SH_SAMPLE
  3  ORDER BY case_id;

CASE_ID                           VALUE PREDICTION     LOWER     UPPER
------------------------------ -------- ---------- --------- ---------
01-JAN-19                       6480684    6402751
01-APR-19                       5593994    5868258
01-JUL-19                       6071823    6205873
01-OCT-19                       5937414    5978511
01-JAN-20                       6093747    6223665
01-APR-20                       4925472    5535877
01-JUL-20                       5827050    5515472
01-OCT-20                       5373679    5601171
01-JAN-21                       5984889    5644292
01-APR-21                       5371731    5317402
01-JUL-21                       6121239    5845169
01-OCT-21                       6287647    5920688
01-JAN-22                       6547097    6500126
01-APR-22                       6922468    5930069
01-JUL-22                       7195999    7376867
01-OCT-22                       7470898    7154088
01-JAN-23                                  7819637   6484414   9154860
01-APR-23                                  7151013   5591487   8710540
01-JUL-23                                  7907806   5843738   9971875
01-OCT-23                                  7821557   5462865  10180250

20 rows selected.

SQL> spool oml4sql-time-series-mset
